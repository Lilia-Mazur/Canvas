{"version":3,"sources":["scripts/main.js"],"names":["isDown","canvas","document","getElementById","buttonClear","ctx","getContext","offsetX","offsetLeft","offsetY","offsetTop","storedLines","storedPoints","startPosition","x","y","endPosition","click","getClientOffset","event","clientX","clientY","pointSearch","A","B","denominator","y2","y1","x2","x1","ua","ub","Math","round","handleMouseDown","e","button","newLine","i","length","newPoint","push","redrawStoredLinesAndPoints","handleMouseMove","beginPath","moveTo","lineTo","stroke","fillStyle","arc","PI","fill","handleMouseOut","clearRect","width","height","clear","intervalID","setInterval","animateClear","setTimeout","clearInterval","abs","j","addEventListener"],"mappings":"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","file":"main.6f459520.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst canvas = document.getElementById('canvas');\nconst buttonClear = document.getElementById('clear');\nconst ctx = canvas.getContext('2d');\nconst offsetX = canvas.offsetLeft;\nconst offsetY = canvas.offsetTop;\nconst storedLines = [];\nconst storedPoints = [];\nlet startPosition = {\n  x: 0,\n  y: 0,\n};\nlet endPosition = {\n  x: 0,\n  y: 0,\n};\nlet isDown;\nlet click = 0;\n\nconst getClientOffset = (event) => {\n  const x = event.clientX - offsetX;\n  const y = event.clientY - offsetY;\n\n  return {\n    x,\n    y,\n  };\n};\n\nfunction pointSearch(A, B) {\n  const denominator = ((B.y2 - B.y1) * (A.x2 - A.x1)\n  - (B.x2 - B.x1) * (A.y2 - A.y1));\n\n  if (denominator === 0) {\n    return false;\n  }\n\n  const ua = ((B.x2 - B.x1) * (A.y1 - B.y1)\n  - (B.y2 - B.y1) * (A.x1 - B.x1)) / denominator;\n  const ub = ((A.x2 - A.x1) * (A.y1 - B.y1)\n  - (A.y2 - A.y1) * (A.x1 - B.x1)) / denominator;\n\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n    return false;\n  }\n\n  const x = Math.round(A.x1 + ua * (A.x2 - A.x1));\n  const y = Math.round(A.y1 + ua * (A.y2 - A.y1));\n\n  return {\n    x,\n    y,\n  };\n}\n\nfunction handleMouseDown(e) {\n  if (click === 0 && e.button === 0) {\n    startPosition = getClientOffset(e);\n    isDown = true;\n    click = 1;\n  } else {\n    endPosition = getClientOffset(e);\n\n    const newLine = {\n      x1: startPosition.x,\n      y1: startPosition.y,\n      x2: endPosition.x,\n      y2: endPosition.y,\n    };\n\n    for (let i = 0; i < storedLines.length; i++) {\n      const newPoint = pointSearch(storedLines[i], newLine);\n\n      if (newPoint && e.button !== 2) {\n        storedPoints.push(newPoint);\n      }\n    }\n\n    if (e.button === 0) {\n      storedLines.push(newLine);\n    };\n\n    redrawStoredLinesAndPoints();\n    click = 0;\n    isDown = false;\n  }\n}\n\nfunction handleMouseMove(e) {\n  if (!isDown) {\n    return;\n  }\n  redrawStoredLinesAndPoints();\n  endPosition = getClientOffset(e);\n\n  const newLine = {\n    x1: startPosition.x,\n    y1: startPosition.y,\n    x2: endPosition.x,\n    y2: endPosition.y,\n  };\n\n  ctx.beginPath();\n  ctx.moveTo(startPosition.x, startPosition.y);\n  ctx.lineTo(endPosition.x, endPosition.y);\n  ctx.stroke();\n\n  for (let i = 0; i < storedLines.length; i++) {\n    const newPoint = pointSearch(storedLines[i], newLine);\n\n    if (newPoint) {\n      ctx.fillStyle = 'red';\n      ctx.beginPath();\n\n      ctx.arc(\n        newPoint.x,\n        newPoint.y,\n        5,\n        0,\n        (Math.PI + (Math.PI * 2) / 2),\n        true\n      );\n      ctx.fill();\n      ctx.stroke();\n    }\n  }\n}\n\nfunction handleMouseOut(e) {\n  if (!isDown) {\n    return;\n  }\n\n  isDown = false;\n  click = 0;\n  endPosition = getClientOffset(e);\n\n  const newLine = {\n    x1: startPosition.x,\n    y1: startPosition.y,\n    x2: endPosition.x,\n    y2: endPosition.y,\n  };\n\n  for (let i = 0; i < storedLines.length; i++) {\n    const newPoint = pointSearch(storedLines[i], newLine);\n\n    if (newPoint) {\n      storedPoints.push(newPoint);\n    }\n  }\n\n  storedLines.push(newLine);\n  redrawStoredLinesAndPoints();\n}\n\nfunction redrawStoredLinesAndPoints() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  if (storedLines.length === 0) {\n    return;\n  }\n\n  for (let i = 0; i < storedLines.length; i++) {\n    ctx.beginPath();\n    ctx.moveTo(storedLines[i].x1, storedLines[i].y1);\n    ctx.lineTo(storedLines[i].x2, storedLines[i].y2);\n    ctx.stroke();\n  }\n\n  for (let i = 0; i < storedPoints.length; i++) {\n    ctx.beginPath();\n    ctx.fillStyle = 'red';\n\n    ctx.arc(\n      storedPoints[i].x,\n      storedPoints[i].y,\n      5,\n      0,\n      (Math.PI + (Math.PI * 2) / 2),\n      true\n    );\n    ctx.fill();\n    ctx.stroke();\n  }\n}\n\nfunction clear() {\n  const intervalID = setInterval(animateClear, 100);\n\n  setTimeout(() => {\n    storedLines.length = 0;\n    storedPoints.length = 0;\n    animateClear();\n    clearInterval(intervalID);\n  }, 3000);\n}\n\nfunction animateClear() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  for (let i = 0; i < storedLines.length; i++) {\n    const x = (Math.abs(storedLines[i].x1 - storedLines[i].x2) / 20);\n    const y = (Math.abs(storedLines[i].y1 - storedLines[i].y2) / 20);\n\n    if (x <= 1 && y <= 1) {\n      return;\n    }\n\n    const x1 = storedLines[i].x1 > storedLines[i].x2\n      ? storedLines[i].x1 - x\n      : storedLines[i].x1 + x;\n    const y1 = storedLines[i].y1 > storedLines[i].y2\n      ? storedLines[i].y1 - y\n      : storedLines[i].y1 + y;\n\n    const x2 = storedLines[i].x2 > storedLines[i].x1\n      ? storedLines[i].x2 - x\n      : storedLines[i].x2 + x;\n    const y2 = storedLines[i].y2 > storedLines[i].y1\n      ? storedLines[i].y2 - y\n      : storedLines[i].y2 + y;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    storedLines[i] = {\n      x1,\n      y1,\n      x2,\n      y2,\n    };\n\n    for (let j = 0; j < storedLines.length; j++) {\n      const newPoint = pointSearch(storedLines[i], storedLines[j]);\n\n      if (newPoint) {\n        storedPoints.push(newPoint);\n      }\n    }\n  }\n\n  for (let j = 0; j < storedPoints.length; j++) {\n    ctx.beginPath();\n    ctx.fillStyle = 'red';\n\n    ctx.arc(\n      storedPoints[j].x,\n      storedPoints[j].y,\n      5,\n      0,\n      (Math.PI\n      + (Math.PI * 2) / 2),\n      true\n    );\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  storedPoints.length = 0;\n}\n\ncanvas.addEventListener('mousedown', handleMouseDown);\ncanvas.addEventListener('mousemove', handleMouseMove);\ncanvas.addEventListener('mouseout', handleMouseOut);\nbuttonClear.addEventListener('click', clear);\n"]}